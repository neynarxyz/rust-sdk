/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.41.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FrameNotificationTokens {
    #[serde(rename = "notification_tokens")]
    pub notification_tokens: Vec<models::FrameNotificationTokensNotificationTokensInner>,
    #[serde(rename = "next")]
    pub next: Box<models::NextCursor>,
}

impl FrameNotificationTokens {
    pub fn new(
        notification_tokens: Vec<models::FrameNotificationTokensNotificationTokensInner>,
        next: models::NextCursor,
    ) -> FrameNotificationTokens {
        FrameNotificationTokens {
            notification_tokens,
            next: Box::new(next),
        }
    }
}
