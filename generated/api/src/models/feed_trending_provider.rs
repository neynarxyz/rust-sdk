/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.38.2
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FeedTrendingProvider : The provider of the trending casts feed.
/// The provider of the trending casts feed.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FeedTrendingProvider {
    #[serde(rename = "neynar")]
    Neynar,
    #[serde(rename = "openrank")]
    Openrank,
    #[serde(rename = "mbd")]
    Mbd,
}

impl std::fmt::Display for FeedTrendingProvider {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Neynar => write!(f, "neynar"),
            Self::Openrank => write!(f, "openrank"),
            Self::Mbd => write!(f, "mbd"),
        }
    }
}

impl Default for FeedTrendingProvider {
    fn default() -> FeedTrendingProvider {
        Self::Neynar
    }
}
