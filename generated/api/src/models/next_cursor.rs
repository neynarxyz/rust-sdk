/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.43.2
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// NextCursor : Returns next cursor
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NextCursor {
    #[serde(rename = "cursor", deserialize_with = "Option::deserialize")]
    pub cursor: Option<String>,
}

impl NextCursor {
    /// Returns next cursor
    pub fn new(cursor: Option<String>) -> NextCursor {
        NextCursor { cursor }
    }
}
