/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.41.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FrameSignaturePacketUntrustedData : Untrusted data from the user
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FrameSignaturePacketUntrustedData {
    /// The unique identifier of a farcaster user (unsigned integer)
    #[serde(rename = "fid", skip_serializing_if = "Option::is_none")]
    pub fid: Option<i32>,
    /// URL of the mini app
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// Message hash
    #[serde(rename = "messageHash", skip_serializing_if = "Option::is_none")]
    pub message_hash: Option<String>,
    /// Timestamp
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    /// Network
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<i32>,
    /// Index of the button
    #[serde(rename = "buttonIndex", skip_serializing_if = "Option::is_none")]
    pub button_index: Option<i32>,
    /// Input text
    #[serde(rename = "inputText", skip_serializing_if = "Option::is_none")]
    pub input_text: Option<String>,
    /// State
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// Transaction ID
    #[serde(rename = "transactionId", skip_serializing_if = "Option::is_none")]
    pub transaction_id: Option<String>,
    /// Ethereum address
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "castId", skip_serializing_if = "Option::is_none")]
    pub cast_id: Option<Box<models::CastId>>,
}

impl FrameSignaturePacketUntrustedData {
    /// Untrusted data from the user
    pub fn new() -> FrameSignaturePacketUntrustedData {
        FrameSignaturePacketUntrustedData {
            fid: None,
            url: None,
            message_hash: None,
            timestamp: None,
            network: None,
            button_index: None,
            input_text: None,
            state: None,
            transaction_id: None,
            address: None,
            cast_id: None,
        }
    }
}
