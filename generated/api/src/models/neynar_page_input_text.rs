/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.41.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NeynarPageInputText {
    /// Indicates if text input is enabled.
    #[serde(rename = "enabled")]
    pub enabled: bool,
    /// The placeholder text for the input.
    #[serde(rename = "placeholder", skip_serializing_if = "Option::is_none")]
    pub placeholder: Option<String>,
}

impl NeynarPageInputText {
    pub fn new(enabled: bool) -> NeynarPageInputText {
        NeynarPageInputText {
            enabled,
            placeholder: None,
        }
    }
}
