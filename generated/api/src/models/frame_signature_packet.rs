/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.35.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FrameSignaturePacket : The Mini app Signature Packet (https://docs.farcaster.xyz/developers/frames/spec#frame-signature-packet)
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FrameSignaturePacket {
    #[serde(rename = "untrustedData")]
    pub untrusted_data: Box<models::FrameSignaturePacketUntrustedData>,
    #[serde(rename = "trustedData")]
    pub trusted_data: Box<models::FrameSignaturePacketTrustedData>,
}

impl FrameSignaturePacket {
    /// The Mini app Signature Packet (https://docs.farcaster.xyz/developers/frames/spec#frame-signature-packet)
    pub fn new(
        untrusted_data: models::FrameSignaturePacketUntrustedData,
        trusted_data: models::FrameSignaturePacketTrustedData,
    ) -> FrameSignaturePacket {
        FrameSignaturePacket {
            untrusted_data: Box::new(untrusted_data),
            trusted_data: Box::new(trusted_data),
        }
    }
}
