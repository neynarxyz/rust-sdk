/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Subscription {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "provider_name", skip_serializing_if = "Option::is_none")]
    pub provider_name: Option<String>,
    #[serde(rename = "contract_address")]
    pub contract_address: String,
    #[serde(rename = "chain")]
    pub chain: i32,
    #[serde(rename = "metadata")]
    pub metadata: Box<models::SubscriptionMetadata>,
    #[serde(rename = "owner_address")]
    pub owner_address: String,
    #[serde(rename = "price")]
    pub price: Box<models::SubscriptionPrice>,
    #[serde(rename = "tiers", skip_serializing_if = "Option::is_none")]
    pub tiers: Option<Vec<models::SubscriptionTier>>,
    #[serde(rename = "protocol_version")]
    pub protocol_version: i32,
    #[serde(rename = "token")]
    pub token: Box<models::SubscriptionToken>,
}

impl Subscription {
    pub fn new(
        object: Object,
        contract_address: String,
        chain: i32,
        metadata: models::SubscriptionMetadata,
        owner_address: String,
        price: models::SubscriptionPrice,
        protocol_version: i32,
        token: models::SubscriptionToken,
    ) -> Subscription {
        Subscription {
            object,
            provider_name: None,
            contract_address,
            chain,
            metadata: Box::new(metadata),
            owner_address,
            price: Box::new(price),
            tiers: None,
            protocol_version,
            token: Box::new(token),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "subscription")]
    Subscription,
}

impl Default for Object {
    fn default() -> Object {
        Self::Subscription
    }
}
