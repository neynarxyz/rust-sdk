/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.46.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SendFrameNotificationsReqBodyFilters : Filters to apply to the target_fids set. All filters are additive, so only users matching all filters will be notified.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendFrameNotificationsReqBodyFilters {
    /// Only send notifications to users who are not in the given FIDs.
    #[serde(rename = "exclude_fids", skip_serializing_if = "Option::is_none")]
    pub exclude_fids: Option<Vec<i32>>,
    /// Only send notifications to users who follow the given FID.
    #[serde(rename = "following_fid", skip_serializing_if = "Option::is_none")]
    pub following_fid: Option<i32>,
    /// Only send notifications to users with a score greater than or equal to this value.
    #[serde(rename = "minimum_user_score", skip_serializing_if = "Option::is_none")]
    pub minimum_user_score: Option<f64>,
    #[serde(rename = "near_location", skip_serializing_if = "Option::is_none")]
    pub near_location: Option<Box<models::Location>>,
}

impl SendFrameNotificationsReqBodyFilters {
    /// Filters to apply to the target_fids set. All filters are additive, so only users matching all filters will be notified.
    pub fn new() -> SendFrameNotificationsReqBodyFilters {
        SendFrameNotificationsReqBodyFilters {
            exclude_fids: None,
            following_fid: None,
            minimum_user_score: None,
            near_location: None,
        }
    }
}
