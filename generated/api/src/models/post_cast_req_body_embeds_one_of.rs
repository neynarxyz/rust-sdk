/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.38.1
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostCastReqBodyEmbedsOneOf {
    #[serde(rename = "cast_id")]
    pub cast_id: Box<models::PostCastReqBodyEmbedsCastIdProperties>,
}

impl PostCastReqBodyEmbedsOneOf {
    pub fn new(
        cast_id: models::PostCastReqBodyEmbedsCastIdProperties,
    ) -> PostCastReqBodyEmbedsOneOf {
        PostCastReqBodyEmbedsOneOf {
            cast_id: Box::new(cast_id),
        }
    }
}
