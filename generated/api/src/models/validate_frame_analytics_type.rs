/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.41.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ValidateFrameAnalyticsType {
    #[serde(rename = "total-interactors")]
    TotalInteractors,
    #[serde(rename = "interactors")]
    Interactors,
    #[serde(rename = "interactions-per-cast")]
    InteractionsPerCast,
    #[serde(rename = "input-text")]
    InputText,
}

impl std::fmt::Display for ValidateFrameAnalyticsType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::TotalInteractors => write!(f, "total-interactors"),
            Self::Interactors => write!(f, "interactors"),
            Self::InteractionsPerCast => write!(f, "interactions-per-cast"),
            Self::InputText => write!(f, "input-text"),
        }
    }
}

impl Default for ValidateFrameAnalyticsType {
    fn default() -> ValidateFrameAnalyticsType {
        Self::TotalInteractors
    }
}
