/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.43.2
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FrameValidateAnalyticsInteractionsPerCastInteractionsPerCastInner {
    #[serde(rename = "start")]
    pub start: String,
    #[serde(rename = "stop")]
    pub stop: String,
    #[serde(rename = "time")]
    pub time: String,
    #[serde(rename = "interaction_count")]
    pub interaction_count: f64,
    #[serde(rename = "cast_url")]
    pub cast_url: String,
}

impl FrameValidateAnalyticsInteractionsPerCastInteractionsPerCastInner {
    pub fn new(
        start: String,
        stop: String,
        time: String,
        interaction_count: f64,
        cast_url: String,
    ) -> FrameValidateAnalyticsInteractionsPerCastInteractionsPerCastInner {
        FrameValidateAnalyticsInteractionsPerCastInteractionsPerCastInner {
            start,
            stop,
            time,
            interaction_count,
            cast_url,
        }
    }
}
