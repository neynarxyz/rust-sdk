/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.37.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostCastResponseCast {
    /// Cast Hash
    #[serde(rename = "hash")]
    pub hash: String,
    #[serde(rename = "author")]
    pub author: Box<models::PostCastResponseCastAuthor>,
    #[serde(rename = "text")]
    pub text: String,
}

impl PostCastResponseCast {
    pub fn new(
        hash: String,
        author: models::PostCastResponseCastAuthor,
        text: String,
    ) -> PostCastResponseCast {
        PostCastResponseCast {
            hash,
            author: Box::new(author),
            text,
        }
    }
}
