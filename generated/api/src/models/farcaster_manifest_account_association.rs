/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.44.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FarcasterManifestAccountAssociation {
    #[serde(rename = "header")]
    pub header: String,
    #[serde(rename = "payload")]
    pub payload: String,
    #[serde(rename = "signature")]
    pub signature: String,
}

impl FarcasterManifestAccountAssociation {
    pub fn new(
        header: String,
        payload: String,
        signature: String,
    ) -> FarcasterManifestAccountAssociation {
        FarcasterManifestAccountAssociation {
            header,
            payload,
            signature,
        }
    }
}
