/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.38.1
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FrameValidateAnalyticsInputTextInputTextsInner {
    /// The unique identifier of a farcaster user (unsigned integer)
    #[serde(rename = "fid")]
    pub fid: i32,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "input_text")]
    pub input_text: String,
}

impl FrameValidateAnalyticsInputTextInputTextsInner {
    pub fn new(
        fid: i32,
        username: String,
        input_text: String,
    ) -> FrameValidateAnalyticsInputTextInputTextsInner {
        FrameValidateAnalyticsInputTextInputTextsInner {
            fid,
            username,
            input_text,
        }
    }
}
