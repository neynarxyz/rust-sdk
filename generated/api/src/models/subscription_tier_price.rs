/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.40.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubscriptionTierPrice {
    #[serde(
        rename = "period_duration_seconds",
        skip_serializing_if = "Option::is_none"
    )]
    pub period_duration_seconds: Option<i32>,
    #[serde(rename = "tokens_per_period", skip_serializing_if = "Option::is_none")]
    pub tokens_per_period: Option<String>,
    #[serde(rename = "initial_mint_price", skip_serializing_if = "Option::is_none")]
    pub initial_mint_price: Option<String>,
}

impl SubscriptionTierPrice {
    pub fn new() -> SubscriptionTierPrice {
        SubscriptionTierPrice {
            period_duration_seconds: None,
            tokens_per_period: None,
            initial_mint_price: None,
        }
    }
}
