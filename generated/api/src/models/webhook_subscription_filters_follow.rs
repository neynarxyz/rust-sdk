/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.41.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookSubscriptionFiltersFollow {
    #[serde(rename = "fids", skip_serializing_if = "Option::is_none")]
    pub fids: Option<Vec<i32>>,
    #[serde(rename = "target_fids", skip_serializing_if = "Option::is_none")]
    pub target_fids: Option<Vec<i32>>,
}

impl WebhookSubscriptionFiltersFollow {
    pub fn new() -> WebhookSubscriptionFiltersFollow {
        WebhookSubscriptionFiltersFollow {
            fids: None,
            target_fids: None,
        }
    }
}
