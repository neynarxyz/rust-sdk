/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.33.1
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendFrameNotificationsReqBodyNotification {
    /// The title of the notification. Must be between 1 and 32 characters.
    #[serde(rename = "title")]
    pub title: String,
    /// The body of the notification. Must be between 1 and 128 characters.
    #[serde(rename = "body")]
    pub body: String,
    /// The target URL to open when the user clicks the notification. Must be a valid URL.
    #[serde(rename = "target_url")]
    pub target_url: String,
    /// An optional UUID for the notification, used as an idempotency key.
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<uuid::Uuid>,
}

impl SendFrameNotificationsReqBodyNotification {
    pub fn new(
        title: String,
        body: String,
        target_url: String,
    ) -> SendFrameNotificationsReqBodyNotification {
        SendFrameNotificationsReqBodyNotification {
            title,
            body,
            target_url,
            uuid: None,
        }
    }
}
