/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.38.2
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionFrameLineItem {
    /// Name of the line item in transaction
    #[serde(rename = "name")]
    pub name: String,
    /// Description of the line item in transaction
    #[serde(rename = "description")]
    pub description: String,
    /// Optional image URL for the line item in transaction
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
}

impl TransactionFrameLineItem {
    pub fn new(name: String, description: String) -> TransactionFrameLineItem {
        TransactionFrameLineItem {
            name,
            description,
            image: None,
        }
    }
}
