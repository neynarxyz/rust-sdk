/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.43.2
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookSecret {
    #[serde(rename = "uid")]
    pub uid: String,
    #[serde(rename = "value")]
    pub value: String,
    #[serde(rename = "expires_at")]
    pub expires_at: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "deleted_at")]
    pub deleted_at: String,
}

impl WebhookSecret {
    pub fn new(
        uid: String,
        value: String,
        expires_at: String,
        created_at: String,
        updated_at: String,
        deleted_at: String,
    ) -> WebhookSecret {
        WebhookSecret {
            uid,
            value,
            expires_at,
            created_at,
            updated_at,
            deleted_at,
        }
    }
}
