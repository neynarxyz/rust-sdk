/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.35.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ZodError {
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "errors")]
    pub errors: Vec<models::ZodErrorErrorsInner>,
}

impl ZodError {
    pub fn new(
        message: String,
        code: String,
        errors: Vec<models::ZodErrorErrorsInner>,
    ) -> ZodError {
        ZodError {
            message,
            code,
            errors,
        }
    }
}
