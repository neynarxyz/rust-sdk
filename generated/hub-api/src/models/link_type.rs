/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LinkType : Defines the type of social connection between users. - follow: Establishes a following relationship where the user will receive updates from the target user in their feed
/// Defines the type of social connection between users. - follow: Establishes a following relationship where the user will receive updates from the target user in their feed
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LinkType {
    #[serde(rename = "follow")]
    Follow,

}

impl std::fmt::Display for LinkType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Follow => write!(f, "follow"),
        }
    }
}

impl Default for LinkType {
    fn default() -> LinkType {
        Self::Follow
    }
}

