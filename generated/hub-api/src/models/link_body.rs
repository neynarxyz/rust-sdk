/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LinkBody : Defines a social connection between users in the Farcaster network. Currently used to establish following relationships, allowing users to curate their content feed.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LinkBody {
    #[serde(rename = "type")]
    pub r#type: models::LinkType,
    /// User-defined timestamp that preserves the original creation time when message.data.timestamp needs to be updated for compaction. Useful for maintaining chronological order in user feeds.
    #[serde(rename = "displayTimestamp", skip_serializing_if = "Option::is_none")]
    pub display_timestamp: Option<i64>,
    /// Farcaster ID (FID). A unique identifier assigned to each user in the Farcaster network. This number is permanent and cannot be changed. FIDs are assigned sequentially when users register on the network.
    #[serde(rename = "targetFid")]
    pub target_fid: i32,
}

impl LinkBody {
    /// Defines a social connection between users in the Farcaster network. Currently used to establish following relationships, allowing users to curate their content feed.
    pub fn new(r#type: models::LinkType, target_fid: i32) -> LinkBody {
        LinkBody {
            r#type,
            display_timestamp: None,
            target_fid,
        }
    }
}
