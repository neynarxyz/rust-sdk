/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HubEventMergeUsernameProof {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "mergeUsernameProofBody")]
    pub merge_username_proof_body: Box<models::MergeUserNameProofBody>,
}

impl HubEventMergeUsernameProof {
    pub fn new(r#type: String, id: i32, merge_username_proof_body: models::MergeUserNameProofBody) -> HubEventMergeUsernameProof {
        HubEventMergeUsernameProof {
            r#type,
            id,
            merge_username_proof_body: Box::new(merge_username_proof_body),
        }
    }
}

