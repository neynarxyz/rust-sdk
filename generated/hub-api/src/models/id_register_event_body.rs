/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.35.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IdRegisterEventBody {
    #[serde(rename = "to")]
    pub to: String,
    #[serde(rename = "eventType")]
    pub event_type: models::IdRegisterEventType,
    #[serde(rename = "from")]
    pub from: String,
    #[serde(rename = "recoveryAddress")]
    pub recovery_address: String,
}

impl IdRegisterEventBody {
    pub fn new(
        to: String,
        event_type: models::IdRegisterEventType,
        from: String,
        recovery_address: String,
    ) -> IdRegisterEventBody {
        IdRegisterEventBody {
            to,
            event_type,
            from,
            recovery_address,
        }
    }
}
