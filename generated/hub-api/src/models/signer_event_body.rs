/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SignerEventBody {
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "keyType")]
    pub key_type: i64,
    #[serde(rename = "eventType")]
    pub event_type: models::SignerEventType,
    #[serde_as(as = "serde_with::base64::Base64")]
    #[serde(rename = "metadata")]
    pub metadata: Vec<u8>,
    #[serde(rename = "metadataType")]
    pub metadata_type: i64,
}

impl SignerEventBody {
    pub fn new(
        key: String,
        key_type: i64,
        event_type: models::SignerEventType,
        metadata: Vec<u8>,
        metadata_type: i64,
    ) -> SignerEventBody {
        SignerEventBody {
            key,
            key_type,
            event_type,
            metadata,
            metadata_type,
        }
    }
}
