/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.35.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HubEventMergeMessage {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "mergeMessageBody")]
    pub merge_message_body: Box<models::MergeMessageBody>,
}

impl HubEventMergeMessage {
    pub fn new(
        r#type: String,
        id: i32,
        merge_message_body: models::MergeMessageBody,
    ) -> HubEventMergeMessage {
        HubEventMergeMessage {
            r#type,
            id,
            merge_message_body: Box::new(merge_message_body),
        }
    }
}
