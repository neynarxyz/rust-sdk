/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.35.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FetchVerificationsByFid200Response {
    #[serde(rename = "messages")]
    pub messages: Vec<models::Verification>,
    #[serde_as(as = "serde_with::base64::Base64")]
    #[serde(rename = "nextPageToken")]
    pub next_page_token: Vec<u8>,
}

impl FetchVerificationsByFid200Response {
    pub fn new(
        messages: Vec<models::Verification>,
        next_page_token: Vec<u8>,
    ) -> FetchVerificationsByFid200Response {
        FetchVerificationsByFid200Response {
            messages,
            next_page_token,
        }
    }
}
