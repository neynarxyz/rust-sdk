/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SignatureScheme : Type of signature scheme used to sign the Message hash - SIGNATURE_SCHEME_ED25519: Ed25519 signature (default) - SIGNATURE_SCHEME_EIP712: ECDSA signature using EIP-712 scheme
/// Type of signature scheme used to sign the Message hash - SIGNATURE_SCHEME_ED25519: Ed25519 signature (default) - SIGNATURE_SCHEME_EIP712: ECDSA signature using EIP-712 scheme
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SignatureScheme {
    #[serde(rename = "SIGNATURE_SCHEME_ED25519")]
    SignatureSchemeEd25519,
    #[serde(rename = "SIGNATURE_SCHEME_EIP712")]
    SignatureSchemeEip712,
}

impl std::fmt::Display for SignatureScheme {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::SignatureSchemeEd25519 => write!(f, "SIGNATURE_SCHEME_ED25519"),
            Self::SignatureSchemeEip712 => write!(f, "SIGNATURE_SCHEME_EIP712"),
        }
    }
}

impl Default for SignatureScheme {
    fn default() -> SignatureScheme {
        Self::SignatureSchemeEd25519
    }
}
