/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UserNameType {
    #[serde(rename = "USERNAME_TYPE_FNAME")]
    UsernameTypeFname,
    #[serde(rename = "USERNAME_TYPE_ENS_L1")]
    UsernameTypeEnsL1,
}

impl std::fmt::Display for UserNameType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::UsernameTypeFname => write!(f, "USERNAME_TYPE_FNAME"),
            Self::UsernameTypeEnsL1 => write!(f, "USERNAME_TYPE_ENS_L1"),
        }
    }
}

impl Default for UserNameType {
    fn default() -> UserNameType {
        Self::UsernameTypeFname
    }
}
