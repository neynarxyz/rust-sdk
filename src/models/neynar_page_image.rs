/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.33.1
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NeynarPageImage {
    /// The URL of the page's image.
    #[serde(rename = "url")]
    pub url: String,
    /// The aspect ratio of the image.
    #[serde(rename = "aspect_ratio")]
    pub aspect_ratio: AspectRatio,
}

impl NeynarPageImage {
    pub fn new(url: String, aspect_ratio: AspectRatio) -> NeynarPageImage {
        NeynarPageImage {
            url,
            aspect_ratio,
        }
    }
}
/// The aspect ratio of the image.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AspectRatio {
    #[serde(rename = "1.91:1")]
    Variant1Period91Colon1,
    #[serde(rename = "1:1")]
    Variant1Colon1,
}

impl Default for AspectRatio {
    fn default() -> AspectRatio {
        Self::Variant1Period91Colon1
    }
}

