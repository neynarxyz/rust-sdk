/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.33.1
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BulkUserAddressType {
    #[serde(rename = "custody_address")]
    CustodyAddress,
    #[serde(rename = "verified_address")]
    VerifiedAddress,

}

impl std::fmt::Display for BulkUserAddressType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CustodyAddress => write!(f, "custody_address"),
            Self::VerifiedAddress => write!(f, "verified_address"),
        }
    }
}

impl Default for BulkUserAddressType {
    fn default() -> BulkUserAddressType {
        Self::CustodyAddress
    }
}

