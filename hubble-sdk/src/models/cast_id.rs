/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CastId : A unique identifier for a cast (post) in the Farcaster network, consisting of the creator's FID and a hash of the cast's content. This combination ensures global uniqueness across all casts.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CastId {
    /// The Farcaster ID (FID) of the user who created the cast. Required to uniquely identify the cast's author in the network.
    #[serde(rename = "fid")]
    pub fid: i32,
    /// A unique hash that identifies a specific cast within the creator's posts. Generated using HASH_SCHEME_BLAKE3 of the cast's content.
    #[serde(rename = "hash")]
    pub hash: String,
}

impl CastId {
    /// A unique identifier for a cast (post) in the Farcaster network, consisting of the creator's FID and a hash of the cast's content. This combination ensures global uniqueness across all casts.
    pub fn new(fid: i32, hash: String) -> CastId {
        CastId {
            fid,
            hash,
        }
    }
}

