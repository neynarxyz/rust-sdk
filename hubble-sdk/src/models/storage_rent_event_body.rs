/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StorageRentEventBody {
    #[serde_as(as = "serde_with::base64::Base64")]
    #[serde(rename = "payer")]
    pub payer: Vec<u8>,
    #[serde(rename = "units")]
    pub units: i64,
    #[serde(rename = "expiry")]
    pub expiry: i64,
}

impl StorageRentEventBody {
    pub fn new(payer: Vec<u8>, units: i64, expiry: i64) -> StorageRentEventBody {
        StorageRentEventBody {
            payer,
            units,
            expiry,
        }
    }
}

