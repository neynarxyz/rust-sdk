/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorResponse {
    #[serde(rename = "errCode")]
    pub err_code: String,
    #[serde(rename = "presentable")]
    pub presentable: bool,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "code")]
    pub code: i32,
    #[serde(rename = "details")]
    pub details: String,
    #[serde(rename = "metadata")]
    pub metadata: Box<models::ErrorResponseMetadata>,
}

impl ErrorResponse {
    pub fn new(err_code: String, presentable: bool, name: String, code: i32, details: String, metadata: models::ErrorResponseMetadata) -> ErrorResponse {
        ErrorResponse {
            err_code,
            presentable,
            name,
            code,
            details,
            metadata: Box::new(metadata),
        }
    }
}

