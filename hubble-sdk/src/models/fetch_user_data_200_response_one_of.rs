/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FetchUserData200ResponseOneOf {
    /// Base64-encoded pagination token for fetching the next page of results. An empty value indicates there are no more pages to return. Used in conjunction with the pageSize parameter to implement pagination across large result sets.
    #[serde_as(as = "serde_with::base64::Base64")]
    #[serde(rename = "nextPageToken")]
    pub next_page_token: Vec<u8>,
    #[serde(rename = "messages")]
    pub messages: Vec<models::UserDataAdd>,
}

impl FetchUserData200ResponseOneOf {
    pub fn new(next_page_token: Vec<u8>, messages: Vec<models::UserDataAdd>) -> FetchUserData200ResponseOneOf {
        FetchUserData200ResponseOneOf {
            next_page_token,
            messages,
        }
    }
}

