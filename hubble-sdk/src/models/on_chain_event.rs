/*
 * Farcaster Hub API
 *
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.21.0
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "type")]
pub enum OnChainEvent {
    #[serde(rename="EVENT_TYPE_SIGNER")]
    EventTypeSigner(Box<models::OnChainEventSigner>),
    #[serde(rename="EVENT_TYPE_SIGNER_MIGRATED")]
    EventTypeSignerMigrated(Box<models::OnChainEventSignerMigrated>),
    #[serde(rename="EVENT_TYPE_ID_REGISTER")]
    EventTypeIdRegister(Box<models::OnChainEventIdRegister>),
    #[serde(rename="EVENT_TYPE_STORAGE_RENT")]
    EventTypeStorageRent(Box<models::OnChainEventStorageRent>),
}

impl Default for OnChainEvent {
    fn default() -> Self {
        Self::EventTypeSigner(Default::default())
    }
}


