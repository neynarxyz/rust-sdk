/*
 * Farcaster API V2
 *
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.33.1
 * Contact: team@neynar.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TrendingTimeWindow : Time window for trending content
/// Time window for trending content
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TrendingTimeWindow {
    #[serde(rename = "1h")]
    Variant1h,
    #[serde(rename = "6h")]
    Variant6h,
    #[serde(rename = "12h")]
    Variant12h,
    #[serde(rename = "24h")]
    Variant24h,
    #[serde(rename = "7d")]
    Variant7d,

}

impl std::fmt::Display for TrendingTimeWindow {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Variant1h => write!(f, "1h"),
            Self::Variant6h => write!(f, "6h"),
            Self::Variant12h => write!(f, "12h"),
            Self::Variant24h => write!(f, "24h"),
            Self::Variant7d => write!(f, "7d"),
        }
    }
}

impl Default for TrendingTimeWindow {
    fn default() -> TrendingTimeWindow {
        Self::Variant1h
    }
}

